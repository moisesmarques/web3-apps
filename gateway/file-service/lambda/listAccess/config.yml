listAccess:
  handler: lambda/listAccess/index.handler
  description: 'Allows user to list user access to a file'
  events:
    - httpApi:
        path: /wallets/{walletId}/storage/files/{fileId}/shares
        method: get
        authorizer:
          type: request
          id: !ImportValue NearGatewayAuthorizerId
  environment:
    # Avoid using Ref here as this may create a Circular dependency between resources https://go.aws/3pk3Nup
    ## TODO: use ${self:custom.startup-service.filesBucket.name} when # TODO: uncomment this section when https://github.com/nearcomponents/gateway/pull/14 is merged
    BUCKET_NAME_FILES: ${self:custom.file-service.s3.files.name}
    TABLE_NAME_FILES: ${self:custom.file-service.dynamodb.files.name}
    ## TODO: use ${ssm:/dynamodb/wallet-service/wallets/name} when exported by Terraform
    TABLE_NAME_WALLETS: near-wallets
    TABLE_NAME_USERS: near-users
  iamRoleStatementsInherit: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
      Resource:
        ## TODO: use ${ssm:/dynamodb/wallet-service/wallets/arn} when exported by Terraform
        - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/near-wallets
    - Effect: Allow
      Action:
        - dynamodb:GetItem
      Resource:
        ## TODO: arn ssm variable not set
        - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/near-users
    - Effect: Allow
      Action:
        - dynamodb:GetItem
      Resource:
        - ${self:custom.file-service.dynamodb.files.arn}
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource:
        - ${self:custom.file-service.dynamodb.files.arn}
        - ${self:custom.file-service.dynamodb.files.arn}/*
